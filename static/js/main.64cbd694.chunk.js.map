{"version":3,"sources":["Helpers/Contexts.js","Components/MainMenu.js","Helpers/QuestionList.js","Components/Quiz.js","Components/EndScreen.js","App.js","reportWebVitals.js","index.js"],"names":["quizContext","createContext","MainMenu","setGameState","useContext","className","onClick","questions","query","answerA","answerB","answerC","answerD","correct","Quiz","quizScore","setQuizScore","useState","currentQuestion","setCurrentQuestion","optionChosen","setOptionChosen","undefined","length","style","backgroundColor","EndScreen","App","gameState","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64cbd694.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const quizContext = createContext();\r\n","import React, { useContext } from \"react\";\r\nimport { quizContext } from \"../Helpers/Contexts\";\r\nimport \"../App.css\";\r\n\r\nexport default function MainMenu() {\r\n    const { setGameState } = useContext(quizContext);\r\n\r\n    return (\r\n        <div className=\"menu\">\r\n            <button onClick={() => setGameState(\"quiz\")}>Start Quiz</button>\r\n        </div>\r\n    );\r\n}\r\n","export const questions = [\r\n    {\r\n        query: \"Who was the last emperor to rule a united Roman Empire?\",\r\n        answerA: \"Caligula\",\r\n        answerB: \"Nero\",\r\n        answerC: \"Marcus Aurelius\",\r\n        answerD: \"Theodosius I\",\r\n        correct: \"D\",\r\n    },\r\n    {\r\n        query: \"What is the name of the second-largest desert in Africa?\",\r\n        answerA: \"Sahara\",\r\n        answerB: \"Namib\",\r\n        answerC: \"Kalahari\",\r\n        answerD: \"Great Victoria\",\r\n        correct: \"C\",\r\n    },\r\n    {\r\n        query: \"Who won the 1997 Champions League final?\",\r\n        answerA: \"Real Madrid\",\r\n        answerB: \"AC Milan\",\r\n        answerC: \"Juventus\",\r\n        answerD: \"Borussia Dortmund\",\r\n        correct: \"D\",\r\n    },\r\n    {\r\n        query: \"In which year was JavaScript released?\",\r\n        answerA: \"1986\",\r\n        answerB: \"1995\",\r\n        answerC: \"1999\",\r\n        answerD: \"2006\",\r\n        correct: \"B\",\r\n    },\r\n    {\r\n        query: \"Who is the frontman of the legendary rock band The Who?\",\r\n        answerA: \"Roger Daltrey\",\r\n        answerB: \"Robert Plant\",\r\n        answerC: \"Kurt Cobain\",\r\n        answerD: \"Ozzy Osbourne\",\r\n        correct: \"A\",\r\n    },\r\n];\r\n","import React, { useContext, useState } from \"react\";\r\nimport { questions } from \"../Helpers/QuestionList\";\r\nimport { quizContext } from \"../Helpers/Contexts\";\r\nimport \"../App.css\";\r\n\r\nconst Quiz = () => {\r\n    const { quizScore, setQuizScore, setGameState } = useContext(quizContext);\r\n\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [optionChosen, setOptionChosen] = useState(\"\");\r\n\r\n    const nextQuestion = () => {\r\n        if (optionChosen === \"\") return;\r\n        if (questions[currentQuestion].correct === optionChosen) {\r\n            setQuizScore(quizScore + 1);\r\n        }\r\n        setOptionChosen(\"\");\r\n        setCurrentQuestion(currentQuestion + 1);\r\n    };\r\n\r\n    const finishQuiz = () => {\r\n        if (optionChosen === \"\") return;\r\n        if (questions[currentQuestion].correct === optionChosen) {\r\n            setQuizScore(quizScore + 1);\r\n        }\r\n        setGameState(\"endScreen\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"quiz\">\r\n            <h1 className=\"mainQuestion\">{questions[currentQuestion].query}</h1>\r\n            <div className=\"options\">\r\n                <button onClick={() => setOptionChosen(\"A\")} className={optionChosen === \"A\" ? \"buttonClicked\" : undefined}>\r\n                    {questions[currentQuestion].answerA}\r\n                </button>\r\n                <button onClick={() => setOptionChosen(\"B\")} className={optionChosen === \"B\" ? \"buttonClicked\" : undefined}>\r\n                    {questions[currentQuestion].answerB}\r\n                </button>\r\n                <button onClick={() => setOptionChosen(\"C\")} className={optionChosen === \"C\" ? \"buttonClicked\" : undefined}>\r\n                    {questions[currentQuestion].answerC}\r\n                </button>\r\n                <button onClick={() => setOptionChosen(\"D\")} className={optionChosen === \"D\" ? \"buttonClicked\" : undefined}>\r\n                    {questions[currentQuestion].answerD}\r\n                </button>\r\n            </div>\r\n            {currentQuestion === questions.length - 1 ? (\r\n                <button onClick={finishQuiz} style={{ backgroundColor: \"#b71c1c\" }}>\r\n                    Finish Quiz\r\n                </button>\r\n            ) : (\r\n                <button onClick={nextQuestion} style={{ backgroundColor: \"#4caf50\" }}>\r\n                    Next Question\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Quiz;\r\n","import React, { useContext } from \"react\";\r\nimport { quizContext } from \"../Helpers/Contexts\";\r\nimport \"../App.css\";\r\nimport { questions } from \"../Helpers/QuestionList\";\r\n\r\nconst EndScreen = () => {\r\n    const { quizScore, setQuizScore, setGameState } = useContext(quizContext);\r\n\r\n    const restartQuiz = () => {\r\n        setQuizScore(0);\r\n        setGameState(\"menu\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"endScreen\">\r\n            <h1>Quiz Finished!</h1>\r\n            <h3 className=\"result\">{`${quizScore} / ${questions.length}`}</h3>\r\n            <button onClick={restartQuiz}>Restart Quiz</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EndScreen;\r\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport MainMenu from \"./Components/MainMenu\";\nimport Quiz from \"./Components/Quiz\";\nimport EndScreen from \"./Components/EndScreen\";\nimport { quizContext } from \"./Helpers/Contexts\";\n\nfunction App() {\n    const [gameState, setGameState] = useState(\"menu\");\n    const [quizScore, setQuizScore] = useState(0);\n\n    return (\n        <div className=\"App\">\n            <h1 className=\"title\">Quiz App</h1>\n            <quizContext.Provider value={{ gameState, setGameState, quizScore, setQuizScore }}>\n                {gameState === \"menu\" && <MainMenu />}\n                {gameState === \"quiz\" && <Quiz />}\n                {gameState === \"endScreen\" && <EndScreen />}\n            </quizContext.Provider>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}